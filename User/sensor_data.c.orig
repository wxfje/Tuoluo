/********************************Copyright ( c ) ***************************
**                  sun huaming
**                        
**
**
**Created By:     sunhuaming
**Created Date:       2015-4-26
**Version:            <version >
**Description:    
**
****************************************************************************/

#include "sensor_data.h"
#include "L3G4200D.h"
#include <stdio.h>
volatile sensor_data_t SensorData;




#if 0
void Data_Send_Senser(void);
void L3G4_data(void)
{ 
    float x,y,z;
    static uint16_t time = 0;    
             //读取L3G4200D数据
    uint8_t i;
    short a,b,c;
    static short x_table[100];
    static short y_table[100];
    static short z_table[100];
    static uint8_t xyz = 0;
    //dps = 2000时，灵敏度为70mdps/digit
    // 则x = T_X *70/1000 度/秒
    //
    READ_L3G4200D();
    x = (float)T_X*70/1000;
    y = (float)T_Y*70/1000;
    z = (float)T_Z*70/1000;
    
    time++;
    Angle_gx = x;
    Angle_gy = y;
    Angle_gz = z;
    /*if( time >= 250)
    {
        time = 0;
        printf( "L3G400D DATA: %d, %d, %d \r\n",T_X,T_Y,T_Z);
        printf( "L3G400D DATA: %4f, %4f, %4f \r\n",Angle_gx,Angle_gy,Angle_gz);    
    }*/
    //printf( "x:%d y:%d z:%d \r\n",T_X,T_Y,T_Z);


//printf( "x:%d y:%d z:%d \r\n",T_X,T_Y,T_Z);
}
#endif 




#include "stm32f10x.h"
#define U16BIT_HIGH8(x)  ((x>>8)&0XFF)
#define U16BIT_LOW_8(x)  (x&0XFF)
extern void USART_SendByte( USART_TypeDef* USARTx, uint8_t Data);

void Data_Send_Senser(void)
{
    uint8_t _cnt=0;
    uint8_t sum = 0;
    uint8_t data_to_send[50];   
    uint8_t i;
    
    data_to_send[_cnt++]=0xAA;
    data_to_send[_cnt++]=0xAA;
    data_to_send[_cnt++]=0x02;
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]= 0;  //?8?
    data_to_send[_cnt++]= 0;  //?8?
    data_to_send[_cnt++]= 0;
    data_to_send[_cnt++]= 0;
    data_to_send[_cnt++]= 0;
    data_to_send[_cnt++]= 0;
    data_to_send[_cnt++]= U16BIT_HIGH8(SensorData.direct.gyro_x);
    data_to_send[_cnt++]= U16BIT_LOW_8(SensorData.direct.gyro_x);
    data_to_send[_cnt++]= U16BIT_HIGH8(SensorData.direct.gyro_y);
    data_to_send[_cnt++]= U16BIT_LOW_8(SensorData.direct.gyro_y);
    data_to_send[_cnt++]= U16BIT_HIGH8(SensorData.direct.gyro_z);
    data_to_send[_cnt++]= U16BIT_LOW_8(SensorData.direct.gyro_z);
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]=0;
    data_to_send[_cnt++]=0;
    
    data_to_send[3] = _cnt-4;
    
    
    for( i=0;i<_cnt;i++)
        sum += data_to_send[i];
    data_to_send[_cnt++] = sum;
    
    for( i=0;i<_cnt;i++)
        USART_SendByte( USART1, data_to_send[i]);
    //Uart1_Put_Buf(data_to_send,_cnt);
}

void gyro_data_with(void)
{
    static short gyro_x_table[10];
    static short gyro_y_table[10];
    static short gyro_z_table[10];
    static uint8_t gyro_count = 0;
    int32_t temp_x,temp_y,temp_z;
    uint8_t i;
    
    READ_L3G4(  (int16_t *)&SensorData.direct.gyro_x,
                (int16_t *)&SensorData.direct.gyro_y,
                (int16_t *)&SensorData.direct.gyro_z);
    
    gyro_x_table[gyro_count] = SensorData.direct.gyro_x;
    gyro_y_table[gyro_count] = SensorData.direct.gyro_x;
    gyro_z_table[gyro_count] = SensorData.direct.gyro_x;
    gyro_count ++;
    if(gyro_count >= 10)gyro_count = 0;
    
    temp_x = 0;
    temp_y = 0;
    temp_z = 0;

    for(i = 0;i<10;i++)
    {
        temp_x += gyro_x_table[i];
        temp_y += gyro_y_table[i];
        temp_z += gyro_z_table[i];
    }
    SensorData.direct.gyro_x = temp_x/10;
    SensorData.direct.gyro_y = temp_y/10;
    SensorData.direct.gyro_z = temp_z/10;//滑动平均滤波
}

void sensor_data_with(void)
{    

    
    //int gyro_x_table[10];
    
    gyro_data_with();
    Data_Send_Senser();
//temp_x += gyro_x_table[0];
//printf( "x:%d y:%d  \r\n",temp_x,gyro_x_table[0]);    
}



